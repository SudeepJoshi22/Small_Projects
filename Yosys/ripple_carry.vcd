$date
	Tue Dec 26 19:28:05 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ripple_carry $end
$var wire 9 ! sum [8:0] $end
$var reg 8 " x [7:0] $end
$var reg 8 # y [7:0] $end
$scope module dut $end
$var wire 8 $ x [7:0] $end
$var wire 8 % y [7:0] $end
$var wire 9 & sum [8:0] $end
$var wire 9 ' co [8:0] $end
$scope begin genblk1[0] $end
$scope begin genblk2 $end
$scope module m0 $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 * cin $end
$var wire 1 + s $end
$var wire 1 , cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope begin genblk3 $end
$scope module mx $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 s $end
$var wire 1 1 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope begin genblk3 $end
$scope module mx $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 s $end
$var wire 1 6 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope begin genblk3 $end
$scope module mx $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 : s $end
$var wire 1 ; cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope begin genblk3 $end
$scope module mx $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > cin $end
$var wire 1 ? s $end
$var wire 1 @ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope begin genblk3 $end
$scope module mx $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 D s $end
$var wire 1 E cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope begin genblk3 $end
$scope module mx $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H cin $end
$var wire 1 I s $end
$var wire 1 J cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope begin genblk3 $end
$scope module mx $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M cin $end
$var wire 1 N s $end
$var wire 1 O cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
0*
x)
x(
bxz '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#10
0N
1O
1M
0I
1J
1H
0D
1E
0C
1?
0@
0>
1:
0;
09
15
06
04
00
01
0/
b100011101 !
b100011101 &
1+
b11100000z '
0,
1)
0.
03
18
0=
1B
0G
0L
0(
0-
12
07
1<
1A
1F
1K
b101001 #
b101001 %
b11110100 "
b11110100 $
#20
